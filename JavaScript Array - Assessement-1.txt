Question-1
let arr = [1,2,3,4,5,6,7,8,9,10,11,12]
let odds = arr.filter(n => n%2)
console.log(odds)

Question-2
function ano(str)
{
  var arr = str.split(' ');
  var arro = [];

  for(var x = 0; x < arr.length; x++){
      arro.push(arr[x].charAt(0).toUpperCase()+arr[x].slice(1));
  }
  return arro.join(' ');
}
console.log(ano("guvi geek zen fullstack"));

Question-3
const num = [10, 20, 30, 40,50,60,70,80,90,100]
const sum = (a, b) =>
 a + b
const sum1 = num.reduce(sum)
console.log(sum1);

Question-4
const newArray=[1,3,2,5,10];
const myPrime=newArray.filter(num=>{
 for(let i=2;i<=num;i++){
 if(num%i===0)
 {
 return num;
 }
 }
});
console.log(myPrime);

Question-5
let arr = ['madam','sir','apple','fruit','line','racecar'];
let palindromes = arr.filter(n => {
  let len = n.length;
  for (let i = 0; i < len / 2; i++) {
    if (n[i] == n[len - i - 1]) {
      return true;
    } else {
      return false;
    }
  }
});
console.log(palindromes)

Question-6
function getMedian(ar1, ar2, n)
{
    var i = 0; 
    var j = 0; 
    var count;
    var m1 = -1, m2 = -1;
    for (count = 0; count <= n; count++)
    {
        if (i == n)
        {
            m1 = m2;
            m2 = ar2[0];
            break;
        }
        else if (j == n)
        {
            m1 = m2;
            m2 = ar1[0];
            break;
        }
        if (ar1[i] <= ar2[j])
        {
            m1 = m2;
            m2 = ar1[i];
            i++;
        }
        else
        {
            m1 = m2;
            m2 = ar2[j];
            j++;
        }
    }
    return (m1 + m2)/2;
}
var ar1 = [1, 12, 15, 26, 38];
var ar2 = [2, 13, 17, 30, 45];
var n1 = ar1.length;
var n2 = ar2.length;
if (n1 == n2)
    console.log("Median is "+ getMedian(ar1, ar2, n1))
else
   console.log("Doesn't work for arrays of unequal size");

Question-7
var arr = ["apple", "mango", 
        "apple", "orange", "mango", "mango"];
  
    function Duplicates(arr) {
        var duplicateData = [];
        for(i=0; i < arr.length; i++){  
            if(duplicateData.indexOf(arr[i]) === -1) {  
                duplicateData.push(arr[i]);  
            }  
        }
        return duplicateData;
    }
    console.log(Duplicates(arr));

Question-8
let arr = [1, 2, 3, 6, 8, 6, 1, 9, 10, 12, 13];
let n=arr.length
let d=3
function Rotate(arr,d,n) {
    var out=new Array(n);
    let k=0;
    for (let i = d; i < n; i++) {
        out[k] = arr[i];
        k++;
    }
    for (let i = 0; i < d; i++) {
        out[k] = arr[i];
        k++;
    }
    for (let i = 0; i < n; i++) {
        console.log(out[i]+" ");
    }
}
Rotate(arr,d,n);